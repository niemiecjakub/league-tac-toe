services:

  backend:
    container_name: league-tac-toe-api
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://dashboard:18889
      - ConnectionStrings__DefaultConnection=Host=${POSTGRES_HOST};Port=${POSTGRES_PORT};Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};
      - Logging__LogLevel__Default=Information
      - Logging__LogLevel__Microsoft=Warning
      - Logging__LogLevel__Microsoft.AspNetCore=Warning
    networks:
      - otel
      - backend_db
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: league-tac-toe-db
    image: postgres:17
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend_db

  frontend:
    container_name: league-tac-toe-front
    build:
      context: ./league-tac-toe
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${API_URL}
    ports:
      - "3000:3000"
    depends_on:
      - backend

  dashboard:
    container_name: league-tac-toe-api-dashboard
    image: mcr.microsoft.com/dotnet/nightly/aspire-dashboard:latest
    ports:
      - "18888:18888"
    networks:
      - otel 
volumes:
  postgres_data:

networks:
  otel:
  backend_db:

